version: "2"

services:
  rest-server:
    build: 
      context: .
      dockerfile: ./build/rest-server/Dockerfile
    ports:
      - "9234:9234"
    command: rest-server -env /api/env.example
    environment:
      DATABASE_HOST: postgres
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
      JAEGER_ENDPOINT: "http://jaeger:14268/api/traces"
      VAULT_ADDRESS: "http://vault:8300"
      KAFKA_HOST: "kafka"
      MEMCACHED_HOST: "memcached:11211"
    depends_on:
      - postgres
      - vault
      - prometheus
      - jaeger
      - elasticsearch
      - redis
      - memcached
      # - zookeeper
      # - kafka
      # - rabbitmq

  postgres:
    image: postgres:12.5-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: dbname
  vault:
    image: vault:1.6.2
    ports:
      - "8300:8300"
    cap_add:
      - IPC_LOCK
    environment:
      VAULT_DEV_ROOT_TOKEN_ID: myroot
      VAULT_DEV_LISTEN_ADDRESS: "0.0.0.0:8300"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.12.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
#   zookeeper:
#     image: docker.io/bitnami/zookeeper:3.7
#     ports:
#       - "2181:2181"
#     volumes:
#       - "zookeeper_data:/bitnami"
#     environment:
#       - ALLOW_ANONYMOUS_LOGIN=yes
#   kafka:
#     image: docker.io/bitnami/kafka:3
#     ports:
#       - "9092:9092"
#       - "9093:9093"
#     volumes:
#       - "kafka_data:/bitnami"
#     environment:
#       - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
#       - ALLOW_PLAINTEXT_LISTENER=yes
#       - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
#       - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
#       - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
#       - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
#     depends_on:
#       - zookeeper

# volumes:
#   zookeeper_data:
#     driver: local
#   kafka_data:
#     driver: local
